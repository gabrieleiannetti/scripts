#!/bin/bash
#
# Copyright 2012 Victor Penso
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

##
## Deploy Oh-My-Zsh from GitHub
##
if [ ! -d $HOME/.oh-my-zsh ] ; then
  echo "Installing Oh-My-Zsh to ~/.oh-my-zsh"
  git clone -q https://github.com/robbyrussell/oh-my-zsh.git $HOME/.oh-my-zsh
fi

if [ ! -d $HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ] ; then
  mkdir -p $HOME/.oh-my-zsh/custom/plugins
  echo "Installing Zsh-Syntax-Highlighting to ~/.oh-my-zsh/custom/plugins"
  git clone -q git://github.com/zsh-users/zsh-syntax-highlighting.git $HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
fi

##
## Zsh prompt configuration
##
# add prompt to Oh-My-Zshell configuration
prompt=$HOME/.oh-my-zsh/themes/default-git.zsh-theme
if [ ! -e $prompt ] ; then
cat > $prompt <<EOF
G=$'\u2b80'
P=$'\u2b82'
ZSH_THEME_GIT_PROMPT_PREFIX="%B%K{232}%F{240} "
ZSH_THEME_GIT_PROMPT_SUFFIX=" %K{130}%F{232}$G%f%b"
ZSH_THEME_GIT_PROMPT_DIRTY="%F{160}⚡%f"
ZSH_THEME_GIT_PROMPT_ADDED="%F{082}✚%f"
ZSH_THEME_GIT_PROMPT_UNTRACKED="…"
ZSH_THEME_GIT_PROMPT_SEPARATOR=$G
PROMPT='$(git_prompt_info)%K{130} %k%F{130}$G%f '
RPROMPT='%F{236}$P%f%K{236}%F{245} %n %F{233}$P%K{233}%F{245} %~ %k%F{233}$G%f'
EOF
# inform the user
echo "Adding Zsh prompt configuration to Oh-My-Zsh."
fi

##
## Configuration for ls colors
##
if [ ! -e $HOME/.dircolors/rainbow.colors ] ; then
# make sure parent directory exists
mkdir $HOME/.dircolors 2> /dev/null
# write the colors configuration
cat > $HOME/.dircolors/rainbow.colors <<EOF
TERM screen-256color
RESET                 0
FILE                  00;38;5;241
DIR                   01;38;5;39 
LINK                  00;38;5;221
MULTIHARDLINK         00 
FIFO                  48;5;235;38;5;160 # pipe
SOCK                  48;5;235;38;5;160 
DOOR                  48;5;235;38;5;252 
BLK                   48;5;235;38;5;160 # block device driver
CHR                   48;5;235;38;5;252 # character device driver
ORPHAN                48;5;235;38;5;160 # symlink to nonexistent file, or non-stat'able file
SETUID                38;5;196 # file that is setuid (u+s)
SETGID                38;5;196 # file that is setgid (g+s)
CAPABILITY            30;41 # file with capability
STICKY_OTHER_WRITABLE 04;38;5;27 # dir that is sticky and other-writable (+t,o+w)
OTHER_WRITABLE        00;38;5;196 # dir that is other-writable (o+w) and not sticky
STICKY                38;5;196 # dir with the sticky bit set (+t) and not other-writable
EXEC                  01;38;5;220

.log                  01;38;5;196
.rb                   00;38;5;228
.cpp                  00;38;5;228
.c                    00;38;5;228
.c++                  00;38;5;228
.bash                 00;38;5;228
.sh                   00;38;5;228
.pl                   00;38;5;228
.tex                  01;38;5;245
.torrent              01;38;5;245
*Makefile             01;38;5;202
*Rakefile             01;38;5;202
*build.xml            01;38;5;202
*rc                   00;38;5;208
*1                    01;38;5;245
.md                   01;38;5;255
.markdown             01;38;5;255
.txt                  00;38;5;253
.xhtml                01;38;5;250
.html                 01;38;5;250
*README               00;38;5;196
*README.txt           00;38;5;196
*readme.txt           00;38;5;196
*README.md            00;38;5;196
*README.markdown      00;38;5;196
*yml                  00;38;5;208
*cfg                  00;38;5;208
*conf                 00;38;5;208
EOF
# inform the user
echo "ls colors configuration written to ~/.dircolors/rainbow.colors"
fi

##
## Zsh configuration file
##
if [ -e $HOME/.zshrc ] ; then
  echo "Zsh configuration ~/.zshrc exists!"
  exit 0
fi

cat >> $HOME/.zshrc <<EOF
ZSH=$HOME/.oh-my-zsh

ZSH_THEME="default-git"

DISABLE_AUTO_TITLE="true"
plugins=(git ruby gem knife zsh-syntax-highlighting)

source $HOME/.oh-my-zsh/oh-my-zsh.sh

#
# Customize to your needs...
#

export TERM="screen-256color"

autoload -U colors && colors
eval \`dircolors \$HOME/.dircolors/rainbow.colors\`

export OH_MY_ZSH_HOME=$ZSH

ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)
ZSH_HIGHLIGHT_STYLES+=(
  reserved-word                 'fg=27,bold'
  command                       'fg=27,bold'
  hashed-command                'fg=27,bold'
  alias                         'fg=39,bold'
  builtin                       'fg=27,bold'
  function                      'fg=39,bold'
  path                          'fg=250,bg=234'
  single-quoted-argument        'fg=220,bold'
  double-quoted-argument        'fg=220,bold'
)

if [ -f $HOME/.zsh_config_hook ]
then
  source $HOME/.zsh_config_hook
fi
EOF
echo "Configuration written to ~/.zshrc"

# make zsh default shell 
shell=$(getent passwd $USER | cut -d':' -f 7)
if [ ! "$shell" == "/bin/zsh" ] ; then
  chsh -s /bin/zsh
  echo "Re-login to your user account."
fi


