#!/usr/bin/env bash
#
# Copyright 2013-2017 Victor Penso
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# exit if an uninitialised variable is used
#set -o nonunset
# exit of statement returns a non-true return value
#set -o errexit

VERSION=0.2

# Filename of this script
SCRIPT=${0##*/}

# Help text for this script
HELP=\
"Usage: $SCRIPT [<option>] <command>
  
<command>:
  t, term, terminal      Install and configure command-line tool-chain
  w, work, workstation   Install and configure GNOME environment

<options>
  -h, --help             Show this help information
  -v, --version          Print version number"

# enable line numbers for debug output
if [ "$_DEBUG" = "true" ] ; then
  export PS4='(${BASH_SOURCE}:${LINENO}):${FUNCNAME[0]}-[${SHLVL},${BASH_SUBSHELL},$?] '
fi

function _debug() {
  if [ "$_DEBUG" = "true" ]; then
    echo 1>&2 "Debug: $@"
  fi
}

function _error() {
  echo 1>&2 "Error: $@"
  echo "See \`$SCRIPT help\` for usage."
}

# Parse the command line options
ARGS=$(getopt -o hv -l "help,version" -- "$@")
eval set -- "$ARGS"
while true; do
  case "$1" in
    -h|--help)
      echo "$HELP"
      exit 0
      ;;
    -v|--version)
      echo $VERSION
      exit 0
      ;;
    --) shift; break ;;
    *) break ;;
  esac
done


##
# Install custom tool chain for working with a terminal environment
#
function terminal() {
  path=${1:-~/projects}
  # install all dependency packages in Debian
  sudo apt-get --quiet=2 --assume-yes install curl git-core vim zsh python ruby
  target=${path}/scripts 
  if [ -d $target ] ; then
    echo "Scripts directory ~/projects/scripts exists!"
  else
    mkdir $path 2>/dev/null
    # Get all my scripts from GitHub
    git clone --origin github https://github.com/vpenso/scripts.git $target
  fi
  source $target/source_me.sh
  # Configure the Vim editor
  $target/bin/vim-default-config
  # Configure the ZSH shell
  $target/bin/zsh-default-config
  # Install my ls color schema
  $target/bin/dir-colors
  # configure the terminal multiplexer
  $target/bin/tmux-default-config
}

##
# 
#
function workstation() {
 
  # Debian based platform...
  if command -v apt 2>&1 >/dev/null ; then
    sudo apt-get --quiet=2 --assume-yes install \
      htop ack-grep sysstat procps iptraf tcpdump \
      psmisc clustershell sshuttle ipmitool freeipmi-tools \
      rsync sshfs ccrypt xclip nmap \
      nethogs arc-theme moka-icon-theme
  fi
 
  # No IPMI servie
  sudo systemctl disable ipmievd.service
 
  echo GNOME configuration org.gnome.desktop.interface...
  gsettings set org.gnome.desktop.interface gtk-theme Arc
  echo "  gtk-theme = " $(gsettings get org.gnome.desktop.interface gtk-theme)
  gsettings set org.gnome.desktop.interface icon-theme Moka
  echo "  icon-theme = " $(gsettings get org.gnome.desktop.interface icon-theme)
  gsettings set org.gnome.desktop.interface clock-show-date true
  echo "  clock-show-date = " $(gsettings get org.gnome.desktop.interface clock-show-date)

}


# Read the command-line arguments
_command=$1 ; shift
case "$_command" in 
  terminal|term|t) terminal $1 ;;
  workstation|work|w) workstation ;;  
  *) echo "$HELP" ;;
esac

exit 0


