#!/usr/bin/env python
#
# Copyright 2017 Victor Penso
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
import argparse
import logging
import sys

# Configure the command-line arguments
params = argparse.ArgumentParser(description = 'Python command-line example program')
params.add_argument('-d',action = 'store_const', dest='loglevel', const='debug', help='Enable debugging output')
params.add_argument('-l', action = 'store', dest='loglevel', default='error', help='Set log-level to debug, info, warning, error, or critical')
params.add_argument('--version', action = 'version', version = '%(prog)s 0.1')
params.add_argument('command', action = 'store', help='First argument to the program')
# Parse the command line arguments
args = params.parse_args()

# Select the required log-level
#
if args.loglevel == None:
    # Default logging level
    loglevel = logging.ERROR
else:
    # List of available logging levels
    loglevel = { 
        'debug': logging.DEBUG, 
        'info': logging.INFO, 
        'warning': logging.WARNING, 
        'error': logging.ERROR, 
        'critical': logging.CRITICAL,
    }[args.loglevel]

# Configure the logging facility
logging.basicConfig(format='[%(asctime)s] %(levelname)s -- %(message)s', datefmt='%Y-%m-%dT%H:%M:%S', level=loglevel)

try:

    # ...Modify to your needs ...
    if args.command == 'hello': 
        logging.debug('Argument [' + args.command + '] passed')
        print('Hello World')
    else:
        raise Exception('Argument [' + args.command + '] is not supported')
    
except Exception as exc:
    print(str(exc) + '!')
    exit(1)
   
exit(0)
