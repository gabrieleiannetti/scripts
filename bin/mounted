#!/usr/bin/env bash
#
# Copyright 2014 Victor Penso
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# exit if an uninitialised variable is used
#set -o nonunset
# exit of statement returns a non-true return value
#set -o errexit

VERSION=0.1

# Filename of this script
SCRIPT=${0##*/}

# Help text for this script
HELP=\
"Usage: $SCRIPT [-h] PATH
  
Check if a file-system is mounted at PATH. PATH will be mounted if missing."

# enable line numbers for debug output
if [ "$_DEBUG" = "true" ] ; then
  export PS4='(${BASH_SOURCE}:${LINENO}):${FUNCNAME[0]}-[${SHLVL},${BASH_SUBSHELL},$?] '
fi

function _debug() {
  if [ "$_DEBUG" = "true" ]; then
    echo 1>&2 "Debug: $@"
  fi
}

function _error() {
  echo 1>&2 "Error: $@"
  echo "Use option -h for help."
}

# Parse the command line options
ARGS=$(getopt -o h -l "help" -- "$@")
eval set -- "$ARGS"
while true; do
  case "$1" in
    -h|--help)
      echo "$HELP"
      exit 0
      ;;
    --) shift; break ;;
    *) break ;;
  esac
done


if [ $# -lt 1 ]
then
  _error "Not enough arguments!"
  exit 1
fi

mount=$1

if grep -qs "$mount" /proc/mounts; then
  echo "It's mounted."
else
  echo "It's not mounted."
  mount "$mount"
  if [ $? -eq 0 ]; then
   echo "Mount success!"
  else
   echo "Something went wrong with the mount..."
   exit 1
  fi
fi

exit 0


